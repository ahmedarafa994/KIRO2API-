# kiro2api 环境配置示例
# 复制此文件为 .env 并填入实际值

# ============================================
# 核心认证配置（必需）
# ============================================

# Token 配置 - 支持两种方式：
# 方式一：JSON 字符串（支持多账号池配置）
# KIRO_AUTH_TOKEN='[{"auth":"Social","refreshToken":"your_social_refresh_token_here","disabled":false},{"auth":"IdC","refreshToken":"your_idc_refresh_token_here","clientId":"your_idc_client_id","clientSecret":"your_idc_client_secret","disabled":false}]'
#
# 方式二：文件路径（推荐生产环境）
# KIRO_AUTH_TOKEN=/path/to/auth_config.json
#
# Token 获取位置：
# - Social tokens: ~/.aws/sso/cache/kiro-auth-token.json
# - IdC tokens: ~/.aws/sso/cache/ 目录下的相关 JSON 文件
KIRO_AUTH_TOKEN=

# 客户端认证密钥（必需）
# 用于验证 API 请求的身份
# 安全提示：请使用至少 32 字符的随机字符串
# 生成方法：openssl rand -base64 32
KIRO_CLIENT_TOKEN=

# ============================================
# 服务配置
# ============================================

# 服务端口（默认：8080）
PORT=8080

# Gin 运行模式（debug/release/test）
# 生产环境请使用 release 模式
GIN_MODE=release

# ============================================
# 日志配置
# ============================================

# 日志级别（debug/info/warn/error）
# debug: 详细调试信息，包含请求/响应详情
# info: 常规信息日志（推荐生产环境）
# warn: 警告信息
# error: 仅错误信息
LOG_LEVEL=info

# 日志格式（text/json）
# text: 人类可读格式，适合开发环境
# json: 结构化格式，适合生产环境和日志收集系统
LOG_FORMAT=json

# 控制台输出开关（true/false）
# 设置为 false 可禁用控制台输出，仅写入文件
LOG_CONSOLE=true

# 日志文件路径（可选）
# 留空则不写入文件，仅输出到控制台
# 示例：/var/log/kiro2api.log
LOG_FILE=

# 启用调用者信息（true/false）
# 在日志中包含文件名和行号信息
LOG_ENABLE_CALLER=false

# 调用者栈帧跳过数量（数字）
# 用于调整日志中显示的调用位置
LOG_CALLER_SKIP=

# ============================================
# 工具配置
# ============================================

# 工具描述的最大长度（字符数，默认：10000）
# 用于限制 tool description 字段的长度
# 防止超长内容导致上游 API 错误
MAX_TOOL_DESCRIPTION_LENGTH=10000

# ============================================
# 调试配置
# ============================================

# 全局调试模式（true/false/1/0）
# 启用后会输出详细的调试信息
# 优先级高于 LOG_LEVEL 配置
DEBUG=false

# ============================================
# 配置说明
# ============================================

# 结构化日志字段（自动包含）：
# - timestamp: 时间戳
# - level: 日志级别
# - service: 服务名称
# - request_id: 请求唯一标识
# - user_id: 用户标识（如果可用）
# - token_usage: Token 使用情况
# - response_time: 响应时间

# 多账号配置示例（KIRO_AUTH_TOKEN JSON 格式）：
# [
#   {
#     "auth": "Social",
#     "refreshToken": "arn:aws:sso:us-east-1:999999999999:token/refresh/xxx",
#     "description": "开发团队主账号",
#     "disabled": false
#   },
#   {
#     "auth": "Social",
#     "refreshToken": "arn:aws:sso:us-east-1:999999999999:token/refresh/yyy",
#     "description": "开发团队备用账号",
#     "disabled": false
#   },
#   {
#     "auth": "IdC",
#     "refreshToken": "arn:aws:identitycenter::us-east-1:999999999999:account/instance/zzz",
#     "clientId": "https://oidc.us-east-1.amazonaws.com/clients/enterprise-client",
#     "clientSecret": "enterprise-secret-key",
#     "description": "生产级企业账号",
#     "disabled": false
#   }
# ]

# 账号选择策略：
# - 顺序选择：按配置顺序依次使用账号
# - 故障转移：账号用完自动切换到下一个
# - 使用监控：实时监控每个账号的使用情况

# 生产环境推荐配置：
# GIN_MODE=release
# LOG_LEVEL=info
# LOG_FORMAT=json
# LOG_CONSOLE=true
# DEBUG=false

# 开发环境推荐配置：
# GIN_MODE=debug
# LOG_LEVEL=debug
# LOG_FORMAT=text
# LOG_CONSOLE=true
# DEBUG=true
